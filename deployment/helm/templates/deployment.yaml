{{- if .Values.helloApi.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "thmnayah.fullname" . }}-hello-api
  namespace: {{ .Values.global.namespace }}
  labels:
    {{- include "thmnayah.labels" . | nindent 4 }}
    app.kubernetes.io/component: hello-api
spec:
  replicas: {{ .Values.helloApi.replicaCount }}
  selector:
    matchLabels:
      {{- include "thmnayah.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: hello-api
  template:
    metadata:
      labels:
        {{- include "thmnayah.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: hello-api
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/health"
    spec:
      initContainers:
      - name: setup
        image: {{ .Values.helloApi.image.repository }}:{{ .Values.helloApi.image.tag }}
        command: ['sh', '-c']
        args:
        - |
          pip install -r /config/requirements.txt
          cp /config/app.py /app/app.py
        volumeMounts:
        - name: config-volume
          mountPath: /config
        - name: app-volume
          mountPath: /app
      containers:
      - name: hello-api
        image: {{ .Values.helloApi.image.repository }}:{{ .Values.helloApi.image.tag }}
        imagePullPolicy: {{ .Values.helloApi.image.pullPolicy }}
        ports:
        - name: http
          containerPort: 8000
          protocol: TCP
        env:
        - name: ENVIRONMENT
          value: "kubernetes"
        - name: SERVICE_NAME
          value: "hello-api"
        command: ["python"]
        args: ["/app/app.py"]
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          {{- toYaml .Values.helloApi.resources | nindent 12 }}
        volumeMounts:
        - name: app-volume
          mountPath: /app
      volumes:
      - name: config-volume
        configMap:
          name: {{ include "thmnayah.fullname" . }}-config
      - name: app-volume
        emptyDir: {}
{{- end }}
